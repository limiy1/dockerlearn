version: "3.7"

services:
  web:
    build: ./services/web
    command: python manage.py run -h 0.0.0.0  # similar to use click manager to run flask application, only dev mode
    volumes:
      - ./services/web/:/usr/src/app/
    ports:
      - 5000:5000
    env_file:
      - ./.env.dev
    depends_on:
      - db

  db:
    # default port is 5432
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=hello_flask_dev

  zookeeper:
    # for kafka
    # https://www.hangge.com/blog/cache/detail_2791.html
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    # Enter the container; docker exec -it kafka /bin/bash
    # List topics; docker exec kafka kafka-topics.sh --list --zookeeper 192.168.60.133:2181
    # Producing; docker exec -it kafka kafka-console-producer.sh --broker-list 192.168.60.133:9092 --topic test
    # Consuming; docker exec -it kafka kafka-console-consumer.sh --bootstrap-server 192.168.60.133:9092 --topic test --from-beginning
    image: wurstmeister/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

volumes:
  postgres_data: #volumn name is dockerlearn_postgres_data, docker automatically creates it in a host directory and mount it. Data inside is permanent

